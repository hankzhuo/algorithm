// 题目：有效的数独  leetcode：36

// 说明：判断一个 9x9 的数独是否有效。只需要根据以下规则，验证已经填入的数字是否有效即可。
//    数字 1-9 在每一行只能出现一次。
//    数字 1-9 在每一列只能出现一次。
//    数字 1-9 在每一个以粗实线分隔的 3x3 宫内只能出现一次。

// 示例 1:
// 输入:
// [
//   ["5","3",".",".","7",".",".",".","."],
//   ["6",".",".","1","9","5",".",".","."],
//   [".","9","8",".",".",".",".","6","."],
//   ["8",".",".",".","6",".",".",".","3"],
//   ["4",".",".","8",".","3",".",".","1"],
//   ["7",".",".",".","2",".",".",".","6"],
//   [".","6",".",".",".",".","2","8","."],
//   [".",".",".","4","1","9",".",".","5"],
//   [".",".",".",".","8",".",".","7","9"]
// ]
// 输出: true

// 示例 2:
// 输入:
// [
//   ["8","3",".",".","7",".",".",".","."],
//   ["6",".",".","1","9","5",".",".","."],
//   [".","9","8",".",".",".",".","6","."],
//   ["8",".",".",".","6",".",".",".","3"],
//   ["4",".",".","8",".","3",".",".","1"],
//   ["7",".",".",".","2",".",".",".","6"],
//   [".","6",".",".",".",".","2","8","."],
//   [".",".",".","4","1","9",".",".","5"],
//   [".",".",".",".","8",".",".","7","9"]
// ]
// 输出: false
// 解释: 除了第一行的第一个数字从 5 改为 8 以外，空格内其他数字均与 示例1 相同。
//      但由于位于左上角的 3x3 宫内有两个 8 存在, 因此这个数独是无效的。


// 此题精髓：将二维数组转化为一维数组，在做比较。i 为 行标，j 为列标
// '4' in row 7 is encoded as "(4)7". 
// '4' in column 7 is encoded as "7(4)".
// '4' in the top-right block is encoded as "0(4)2".

var isValidSudoku = function(board) {
  var map = {};
  for (var i = 0; i < 9; i++) {
      for (var j = 0; j < 9; j++) {
          if (board[i][j] !== '.') {
              let b = "(" + board[i][j] + ")";
              let rowNum = b + i;
              let columnNum = j + b;
              let topRightNum = parseInt(i/3) + b + parseInt(j/3);
                            
              if (map[rowNum] || map[columnNum] || map[topRightNum]) {
                  return false;
              } else {
                  map[rowNum] = true
                  map[columnNum] = true
                  map[topRightNum] = true
              }
          }
      }
  }
  return true
};